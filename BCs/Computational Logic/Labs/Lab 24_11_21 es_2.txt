; LAB 24/11/21
; EXERCISE 2

(declare-sort D)
(declare-const a D)			; antonio
(declare-const m D)			; michele
(declare-const g D)			; giovanni

(declare-fun S (D) Bool)	; sciare
(declare-fun C (D) Bool)	; climber

(declare-sort D2)
(declare-const r D2)		; rain
(declare-const s D2)		; snow

(declare-fun L (D D2) Bool)	; like

; Any member of the club who is not a 
; skier is a climber.

(assert (forall ((x D)) (=> (not(S x)) (C x) )))

; Climbers do not like rain.
(assert (forall ((x D)) (=> (C x) (not (L x r)) )))

; Any person who does not love snow is not a skier.
(assert (forall ((x D)) (=> (not(L x s)) (not(S x)))))

; Antonio does not love what Michele loves.
(assert (forall ((x D2)) ( => (L m x) (not(L a x)))))

; Antonio loves rain and snow
(assert (L a r))
(assert (L a s))

; Is there a CAI member who is a skier but not a climber?
(check-sat)
(get-value ((S a)(S m)(S g)(C a)(C m)(C g)))
